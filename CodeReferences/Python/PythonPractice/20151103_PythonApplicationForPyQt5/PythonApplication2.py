# -*- coding: utf-8 -*- 
 
import sys #system module?? ?????Ѵ?.
#from PyQt5.QtCore import *
#from PyQt5.QtGui import *

from PyQt5.QtWidgets import QApplication, QWidget #Wiget?? ?????ϱ? ???? ????
from PyQt5.QtWidgets import QToolTip, QPushButton #??ư?? ?????? ????
from PyQt5.QtWidgets import QMessageBox #??????ư?? ?????? ??Ÿ???? ?޼????? ?????? ???? ????
from PyQt5.QtWidgets import QDesktopWidget #????ũž???? ???ư??? ?????? ?????ϱ? ???? ????
from PyQt5.QtWidgets import QLabel
from PyQt5.QtGui import QFont #??Ʈ?? ?????ϴ? ????
from PyQt5.QtGui import QIcon #???????? ?????ϴ? ????
from PyQt5.QtGui import QGuiApplication

from PyQt5.QtCore import QCoreApplication #QtCore ????

class Example(QWidget):
    #?ʱ?ȭ???ִ? ?޼???
    def __init__(self):
        super().__init__() #Super Class?? __main__?? ?ش??ϴ? object Ŭ?????? ?ʱ?ȭ
        self.initUI() #QWidget.initUI?? ?ʱ?ȭ
        return

    #Example Ŭ???? ???? UI?? ?????ϴ? ?޼???
    def initUI(self):
        #??Ʈ????
        QToolTip.setFont(QFont('SansSerif', 10)) #Hold value(Non __init__)

        #UI????
        self.setGeometry(300,300,300,200)
        self.setWindowIcon(QIcon('MIRO.png'))
        self.setWindowTitle('Test')
        self.resize(250,100)
        #self.move(250,100)
        self.center() #Display center Method

        #?׳? ?????? ??ư??????
        btn=QPushButton('PUSH',self) # This self is QPushButton
        btn.setToolTip('This is a <b>QPushButton</b> widget') #Information about Button
        btn.resize(btn.sizeHint()) #Button Position
        btn.move(50,50)

        #??????ư??????
        btn2=QPushButton('EXIT',self) # This self is QPushButton
        btn2.clicked.connect(QCoreApplication.instance().quit) #EXIT Method
        btn2.setToolTip('This is a <b>EXIT Button</b> widget') #Information about Button
        btn2.resize(btn.sizeHint()) #Button Position
        btn2.move(150,50)

        #GUI???¸? ????
        self.show()
        return

    #?????? ??Ÿ???? Event ?޼??? ?????? ???? ?޼???
    def closeEvent(self, event): #close event
        reply=QMessageBox.question(self, 'Message', 'Really do you wanna EXIT?', QMessageBox.Yes | QMessageBox.No, QMessageBox.No)

        #yes, no ?? QMessageBox?ȿ? ???? ?ִ°Ŵ?.
        if reply== QMessageBox.Yes:
            event.accept() #Quit
        else:
            event.ignore() #Return
        return
    
    #????ũž ???? ?????? ??ġ?? ????? ?????ִ? ?޼???
    def center(self):
        qr = self.frameGeometry() #FrameGemotry on QWidget
        cp = QDesktopWidget().availableGeometry().center() #Application Potision
        qr.moveCenter(cp) #Size unchanged
        self.move(qr.topLeft())  #Standard potion
        return

# main function
def main():
    app=QApplication(sys.argv)
    ex=Example()
    sys.exit(app.exec_())

    app = QGuiApplication(sys.argv)
    label = QLabel("Hello PyQt5-1")
    label.show()
    app.exec_()

    #label = QLabel("Hello PyQt5-2")
    #label.show()
    #app.exec_()

    return

if __name__ == "__main__":
    main()