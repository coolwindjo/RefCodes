I"»<h3 id="github">GitHub</h3>
<p><a href="https://github.com/coolwindjo/RefCodes/blob/master/AlgoGuruProject/Done/StringEditor" title="StringEditor">StringEditor</a></p>

<p><img src="/assets/img/posting/string_editor.png" alt="StringEditor" /></p>

<h3 id="source">Source</h3>

<figure class="highlight"><pre><code class="language-cpp" data-lang="cpp"><span class="kt">int</span> <span class="nf">Left</span><span class="p">(</span><span class="kt">int</span> <span class="n">pos</span><span class="p">){</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">pos</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="n">pos</span><span class="p">;</span>
    <span class="n">pos</span><span class="o">--</span><span class="p">;</span>
    <span class="n">itPos</span><span class="o">--</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">pos</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">Right</span><span class="p">(</span><span class="kt">int</span> <span class="n">pos</span><span class="p">){</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">pos</span> <span class="o">&gt;=</span> <span class="n">len</span><span class="p">)</span> <span class="k">return</span> <span class="n">pos</span><span class="p">;</span>
    <span class="n">pos</span><span class="o">++</span><span class="p">;</span>
    <span class="n">itPos</span><span class="o">++</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">pos</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">Del</span><span class="p">(</span><span class="kt">int</span> <span class="n">pos</span><span class="p">){</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">pos</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="n">pos</span><span class="p">;</span>
    <span class="n">lc</span><span class="o">::</span><span class="n">iterator</span> <span class="n">it</span> <span class="o">=</span> <span class="n">itPos</span><span class="p">;</span>
    <span class="n">lcL</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="o">--</span><span class="n">it</span><span class="p">);</span>
    <span class="n">len</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">lcL</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
    <span class="k">return</span> <span class="o">--</span><span class="n">pos</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">Ins</span><span class="p">(</span><span class="kt">int</span> <span class="n">pos</span><span class="p">,</span> <span class="kt">char</span> <span class="n">alpha</span><span class="p">){</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">pos</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="n">pos</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">pos</span> <span class="o">&gt;</span> <span class="n">len</span><span class="p">)</span> <span class="k">return</span> <span class="n">pos</span><span class="p">;</span>
    <span class="n">lcL</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">itPos</span><span class="p">,</span> <span class="n">alpha</span><span class="p">);</span>
    <span class="n">len</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">lcL</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
    <span class="k">return</span> <span class="o">++</span><span class="n">pos</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">EditStr</span><span class="p">(</span><span class="k">const</span> <span class="kt">int</span> <span class="n">numCmds</span><span class="p">){</span>
    <span class="kt">int</span> <span class="n">pos</span> <span class="o">=</span> <span class="n">ParseStr</span><span class="p">();</span>
    <span class="n">FOR</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">numCmds</span><span class="p">){</span>
        <span class="kt">char</span> <span class="n">a</span> <span class="o">=</span> <span class="n">cmd</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="k">switch</span><span class="p">(</span><span class="n">a</span><span class="p">){</span>
        <span class="k">case</span> <span class="mi">1</span><span class="p">:</span>
            <span class="n">pos</span> <span class="o">=</span> <span class="n">Left</span><span class="p">(</span><span class="n">pos</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="mi">2</span><span class="p">:</span>
            <span class="n">pos</span> <span class="o">=</span> <span class="n">Right</span><span class="p">(</span><span class="n">pos</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="mi">3</span><span class="p">:</span>
            <span class="n">pos</span> <span class="o">=</span> <span class="n">Del</span><span class="p">(</span><span class="n">pos</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="nl">default:</span>
            <span class="n">pos</span> <span class="o">=</span> <span class="n">Ins</span><span class="p">(</span><span class="n">pos</span><span class="p">,</span> <span class="n">a</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span></code></pre></figure>
:ET