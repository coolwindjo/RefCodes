I"T7<h3 id="github">GitHub</h3>
<p><a href="https://github.com/coolwindjo/RefCodes/blob/master/AlgoGuruProject/Done/AvoidZeros" title="AvoidZeros">AvoidZeros</a></p>

<p><img src="/assets/img/posting/avoid_zeros.png" alt="AvoidZeros" /></p>

<h3 id="source">Source</h3>

<figure class="highlight"><pre><code class="language-cpp" data-lang="cpp">	<span class="k">explicit</span> <span class="nf">CProbSolve</span><span class="p">(</span><span class="k">const</span> <span class="kt">int</span> <span class="n">N</span><span class="p">)</span> <span class="p">{</span>
		<span class="n">m_minZeros</span> <span class="o">=</span> <span class="n">INF</span><span class="p">;</span>
		<span class="n">m_mapSizeN</span> <span class="o">=</span> <span class="n">N</span><span class="p">;</span>
		<span class="n">P_IFNOT</span><span class="p">(</span><span class="n">m_mapSizeN</span> <span class="o">&gt;=</span> <span class="mi">2</span> <span class="p">,</span> <span class="n">m_mapSizeN</span><span class="p">);</span>
		<span class="n">P_IFNOT</span><span class="p">(</span><span class="n">m_mapSizeN</span> <span class="o">&lt;=</span> <span class="mi">1000</span><span class="p">,</span> <span class="n">m_mapSizeN</span><span class="p">);</span>

		<span class="n">FOR</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="n">m_mapSizeN</span><span class="p">)</span> <span class="p">{</span>
			<span class="n">vii</span> <span class="n">viiRow</span><span class="p">;</span>
			<span class="n">vi</span> <span class="n">viRow</span><span class="p">;</span>
			<span class="n">FOR</span><span class="p">(</span><span class="n">col</span><span class="p">,</span> <span class="n">m_mapSizeN</span><span class="p">)</span> <span class="p">{</span>
				<span class="kt">int</span> <span class="n">val</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
				<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">val</span><span class="p">;</span>
				<span class="n">P_IFNOT</span><span class="p">(</span><span class="n">val</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">val</span><span class="p">);</span>
				<span class="kt">int</span> <span class="n">numTwos</span> <span class="o">=</span> <span class="n">INF</span><span class="p">;</span>
				<span class="kt">int</span> <span class="n">numFives</span> <span class="o">=</span> <span class="n">INF</span><span class="p">;</span>
				<span class="k">if</span> <span class="p">(</span><span class="n">val</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
					<span class="n">numTwos</span> <span class="o">=</span> <span class="n">_CountFactor</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">val</span><span class="p">);</span>
					<span class="n">numFives</span> <span class="o">=</span> <span class="n">_CountFactor</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="n">val</span><span class="p">);</span>
				<span class="p">}</span>
				<span class="n">viiRow</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">ii</span><span class="p">(</span><span class="n">numTwos</span><span class="p">,</span> <span class="n">numFives</span><span class="p">));</span>
				<span class="n">viRow</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">val</span><span class="p">);</span>
			<span class="p">}</span>
			<span class="n">m_map</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">viiRow</span><span class="p">);</span>
			<span class="n">m_mapCanGo</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">viRow</span><span class="p">);</span>
		<span class="p">}</span>

		<span class="n">_Solve</span><span class="p">();</span>
	<span class="p">}</span>

	<span class="kt">int</span> <span class="nf">_CountFactor</span><span class="p">(</span><span class="k">const</span> <span class="kt">int</span> <span class="n">factor</span><span class="p">,</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">val</span><span class="p">)</span> <span class="p">{</span>
		<span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
		<span class="kt">int</span> <span class="n">quotient</span> <span class="o">=</span> <span class="n">val</span><span class="p">;</span>
		<span class="k">while</span> <span class="p">(</span><span class="n">quotient</span> <span class="o">%</span> <span class="n">factor</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
			<span class="n">quotient</span> <span class="o">/=</span> <span class="n">factor</span><span class="p">;</span>
			<span class="n">cnt</span><span class="o">++</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="k">return</span> <span class="n">cnt</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="kt">void</span> <span class="nf">_UpdateFactorMap</span><span class="p">()</span> <span class="p">{</span>
		<span class="n">FOR_INC</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">m_mapSizeN</span><span class="p">)</span> <span class="p">{</span>
			<span class="n">m_map</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="n">first</span> <span class="o">+=</span> <span class="n">m_map</span><span class="p">[</span><span class="n">row</span> <span class="o">-</span> <span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="n">first</span><span class="p">;</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">m_map</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="n">first</span> <span class="o">&gt;</span> <span class="n">INF</span><span class="p">)</span> <span class="n">m_map</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="n">first</span> <span class="o">=</span> <span class="n">INF</span><span class="p">;</span>
			<span class="n">m_map</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="n">second</span> <span class="o">+=</span> <span class="n">m_map</span><span class="p">[</span><span class="n">row</span> <span class="o">-</span> <span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="n">second</span><span class="p">;</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">m_map</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="n">second</span> <span class="o">&gt;</span> <span class="n">INF</span><span class="p">)</span> <span class="n">m_map</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="n">second</span> <span class="o">=</span> <span class="n">INF</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="n">FOR_INC</span><span class="p">(</span><span class="n">col</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">m_mapSizeN</span><span class="p">)</span> <span class="p">{</span>
			<span class="n">m_map</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">col</span><span class="p">].</span><span class="n">first</span> <span class="o">+=</span> <span class="n">m_map</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">col</span> <span class="o">-</span> <span class="mi">1</span><span class="p">].</span><span class="n">first</span><span class="p">;</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">m_map</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">col</span><span class="p">].</span><span class="n">first</span> <span class="o">&gt;</span> <span class="n">INF</span><span class="p">)</span> <span class="n">m_map</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">col</span><span class="p">].</span><span class="n">first</span> <span class="o">=</span> <span class="n">INF</span><span class="p">;</span>
			<span class="n">m_map</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">col</span><span class="p">].</span><span class="n">second</span> <span class="o">+=</span> <span class="n">m_map</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">col</span> <span class="o">-</span> <span class="mi">1</span><span class="p">].</span><span class="n">second</span><span class="p">;</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">m_map</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">col</span><span class="p">].</span><span class="n">second</span> <span class="o">&gt;</span> <span class="n">INF</span><span class="p">)</span> <span class="n">m_map</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">col</span><span class="p">].</span><span class="n">second</span> <span class="o">=</span> <span class="n">INF</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="n">FOR_INC</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">m_mapSizeN</span><span class="p">)</span> <span class="p">{</span>
			<span class="n">FOR_INC</span><span class="p">(</span><span class="n">col</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">m_mapSizeN</span><span class="p">)</span> <span class="p">{</span>
				<span class="n">m_map</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">].</span><span class="n">first</span> <span class="o">+=</span> <span class="n">_min</span><span class="p">(</span><span class="n">m_map</span><span class="p">[</span><span class="n">row</span> <span class="o">-</span> <span class="mi">1</span><span class="p">][</span><span class="n">col</span><span class="p">].</span><span class="n">first</span><span class="p">,</span> <span class="n">m_map</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span> <span class="o">-</span> <span class="mi">1</span><span class="p">].</span><span class="n">first</span><span class="p">);</span>
				<span class="k">if</span> <span class="p">(</span><span class="n">m_map</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">].</span><span class="n">first</span> <span class="o">&gt;</span> <span class="n">INF</span><span class="p">)</span> <span class="n">m_map</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">].</span><span class="n">first</span> <span class="o">=</span> <span class="n">INF</span><span class="p">;</span>
				<span class="n">m_map</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">].</span><span class="n">second</span> <span class="o">+=</span> <span class="n">_min</span><span class="p">(</span><span class="n">m_map</span><span class="p">[</span><span class="n">row</span> <span class="o">-</span> <span class="mi">1</span><span class="p">][</span><span class="n">col</span><span class="p">].</span><span class="n">second</span><span class="p">,</span> <span class="n">m_map</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span> <span class="o">-</span> <span class="mi">1</span><span class="p">].</span><span class="n">second</span><span class="p">);</span>
				<span class="k">if</span> <span class="p">(</span><span class="n">m_map</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">].</span><span class="n">second</span> <span class="o">&gt;</span> <span class="n">INF</span><span class="p">)</span> <span class="n">m_map</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">].</span><span class="n">second</span> <span class="o">=</span> <span class="n">INF</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
		<span class="n">m_minZeros</span> <span class="o">=</span> <span class="n">_min</span><span class="p">(</span><span class="n">m_map</span><span class="p">[</span><span class="n">m_mapSizeN</span> <span class="o">-</span> <span class="mi">1</span><span class="p">][</span><span class="n">m_mapSizeN</span> <span class="o">-</span> <span class="mi">1</span><span class="p">].</span><span class="n">first</span><span class="p">,</span> <span class="n">m_map</span><span class="p">[</span><span class="n">m_mapSizeN</span> <span class="o">-</span> <span class="mi">1</span><span class="p">][</span><span class="n">m_mapSizeN</span> <span class="o">-</span> <span class="mi">1</span><span class="p">].</span><span class="n">second</span><span class="p">);</span>
	<span class="p">}</span></code></pre></figure>

:ET