I"ð"<h3 id="github">GitHub</h3>
<p><a href="https://github.com/coolwindjo/RefCodes/blob/master/AlgoGuruProject/Done/NamingDaughter" title="NamingDaughter">NamingDaughter</a></p>

<p><img src="/assets/img/posting/naming_daughter.png" alt="NamingDaughter" /></p>

<h3 id="source">Source</h3>

<figure class="highlight"><pre><code class="language-cpp" data-lang="cpp">	<span class="kt">void</span> <span class="nf">_BFSWithUniqueAndSmallest</span><span class="p">(</span><span class="k">const</span> <span class="n">ii</span> <span class="o">&amp;</span><span class="n">start</span><span class="p">)</span> <span class="p">{</span>
		<span class="n">m_ans</span> <span class="o">=</span> <span class="n">m_map</span><span class="p">[</span><span class="n">start</span><span class="p">.</span><span class="n">first</span><span class="p">][</span><span class="n">start</span><span class="p">.</span><span class="n">second</span><span class="p">];</span>
		<span class="n">m_posQ</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">start</span><span class="p">);</span>
		<span class="k">while</span> <span class="p">(</span><span class="nb">true</span><span class="p">)</span> <span class="p">{</span>
			<span class="k">while</span> <span class="p">(</span><span class="o">!</span><span class="n">m_posQ</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span>
				<span class="k">const</span> <span class="n">ii</span> <span class="n">pos</span> <span class="o">=</span> <span class="n">m_posQ</span><span class="p">.</span><span class="n">front</span><span class="p">();</span> <span class="n">m_posQ</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
				<span class="n">FOR</span><span class="p">(</span><span class="n">dir</span><span class="p">,</span> <span class="n">eDIR_LEN</span><span class="p">)</span> <span class="p">{</span>
					<span class="k">const</span> <span class="n">ii</span> <span class="n">nextPos</span> <span class="o">=</span> <span class="n">ii</span><span class="p">(</span><span class="n">pos</span><span class="p">.</span><span class="n">first</span> <span class="o">+</span> <span class="kt">DIR</span><span class="p">[</span><span class="n">dir</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span> <span class="n">pos</span><span class="p">.</span><span class="n">second</span> <span class="o">+</span> <span class="kt">DIR</span><span class="p">[</span><span class="n">dir</span><span class="p">][</span><span class="mi">1</span><span class="p">]);</span>
					<span class="k">if</span> <span class="p">(</span><span class="n">OOR</span><span class="p">(</span><span class="n">nextPos</span><span class="p">.</span><span class="n">first</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">m_rows</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)))</span> <span class="k">continue</span><span class="p">;</span>
					<span class="k">if</span> <span class="p">(</span><span class="n">OOR</span><span class="p">(</span><span class="n">nextPos</span><span class="p">.</span><span class="n">second</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">m_cols</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)))</span> <span class="k">continue</span><span class="p">;</span>
<span class="c">#if 0 // it works sometimes
					const string candName = m_ans + m_map[nextPos.first][nextPos.second];
					if (candName.compare(m_visit[nextPos.first][nextPos.second]) &lt; 0) {
						m_visit[nextPos.first][nextPos.second] = candName;
						m_viiPos.push_back(nextPos);
					}
#else</span>
					<span class="n">m_viiPos</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">nextPos</span><span class="p">);</span>
<span class="cp">#endif // 0
</span>				<span class="p">}</span>
			<span class="p">}</span>
			<span class="n">m_viiPos</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">unique</span><span class="p">(</span><span class="n">m_viiPos</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">m_viiPos</span><span class="p">.</span><span class="n">end</span><span class="p">()),</span> <span class="n">m_viiPos</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
			<span class="k">const</span> <span class="kt">int</span> <span class="n">numCands</span> <span class="o">=</span> <span class="n">m_viiPos</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">numCands</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>

			<span class="kt">char</span> <span class="n">earlistC</span> <span class="o">=</span> <span class="n">m_map</span><span class="p">[</span><span class="n">m_viiPos</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">first</span><span class="p">][</span><span class="n">m_viiPos</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">second</span><span class="p">];</span>
			<span class="n">FOR_INC</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">numCands</span><span class="p">)</span> <span class="p">{</span>
				<span class="k">const</span> <span class="kt">char</span> <span class="n">ch</span> <span class="o">=</span> <span class="n">m_map</span><span class="p">[</span><span class="n">m_viiPos</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">first</span><span class="p">][</span><span class="n">m_viiPos</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">second</span><span class="p">];</span>
				<span class="k">if</span> <span class="p">(</span><span class="n">ch</span> <span class="o">&lt;</span> <span class="n">earlistC</span><span class="p">)</span> <span class="p">{</span>
					<span class="n">earlistC</span> <span class="o">=</span> <span class="n">ch</span><span class="p">;</span>
				<span class="p">}</span>
			<span class="p">}</span>
			<span class="n">m_ans</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">earlistC</span><span class="p">);</span>
			<span class="k">if</span> <span class="p">((</span><span class="n">m_viiPos</span><span class="p">.</span><span class="n">front</span><span class="p">().</span><span class="n">first</span> <span class="o">==</span> <span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">m_rows</span> <span class="o">-</span> <span class="mi">1</span><span class="p">))</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">m_viiPos</span><span class="p">.</span><span class="n">front</span><span class="p">().</span><span class="n">second</span> <span class="o">==</span> <span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">m_cols</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)))</span> <span class="p">{</span>
				<span class="k">return</span><span class="p">;</span>
			<span class="p">}</span>

			<span class="n">FOR</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">numCands</span><span class="p">)</span> <span class="p">{</span>
				<span class="k">if</span> <span class="p">(</span><span class="n">m_map</span><span class="p">[</span><span class="n">m_viiPos</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">first</span><span class="p">][</span><span class="n">m_viiPos</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">second</span><span class="p">]</span> <span class="o">==</span> <span class="n">earlistC</span><span class="p">)</span> <span class="p">{</span>
					<span class="n">m_posQ</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">m_viiPos</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
				<span class="p">}</span>
			<span class="p">}</span>
			<span class="n">m_viiPos</span><span class="p">.</span><span class="n">clear</span><span class="p">();</span>
		<span class="p">}</span>
	<span class="p">}</span></code></pre></figure>

:ET